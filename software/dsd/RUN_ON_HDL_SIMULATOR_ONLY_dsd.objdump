
RUN_ON_HDL_SIMULATOR_ONLY_dsd.elf:     file format elf32-littlenios2
RUN_ON_HDL_SIMULATOR_ONLY_dsd.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800184

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00001920 memsz 0x00001920 flags r-x
    LOAD off    0x00002940 vaddr 0x00801940 paddr 0x00801b38 align 2**12
         filesz 0x000001f8 memsz 0x000001f8 flags rw-
    LOAD off    0x00002d30 vaddr 0x00801d30 paddr 0x00801d30 align 2**12
         filesz 0x00000000 memsz 0x00000118 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000164  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00001690  00800184  00800184  00001184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000012c  00801814  00801814  00002814  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       000001f8  00801940  00801b38  00002940  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000118  00801d30  00801d30  00002d30  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00002b38  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 000001f0  00000000  00000000  00002b60  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000001c9  00000000  00000000  00002d50  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00001ffd  00000000  00000000  00002f19  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000104c  00000000  00000000  00004f16  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00001953  00000000  00000000  00005f62  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000001d0  00000000  00000000  000078b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00000512  00000000  00000000  00007a88  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00000814  00000000  00000000  00007f9a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000228  00000000  00000000  000087b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .thread_model 00000003  00000000  00000000  0000a021  2**0
                  CONTENTS, READONLY
 17 .cpu          00000003  00000000  00000000  0000a024  2**0
                  CONTENTS, READONLY
 18 .qsys         00000001  00000000  00000000  0000a027  2**0
                  CONTENTS, READONLY
 19 .simulation_enabled 00000001  00000000  00000000  0000a028  2**0
                  CONTENTS, READONLY
 20 .sysid_hash   00000004  00000000  00000000  0000a029  2**0
                  CONTENTS, READONLY
 21 .sysid_base   00000004  00000000  00000000  0000a02d  2**0
                  CONTENTS, READONLY
 22 .sysid_time   00000004  00000000  00000000  0000a031  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   00000009  00000000  00000000  0000a035  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    00000009  00000000  00000000  0000a03e  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   00000009  00000000  00000000  0000a047  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 00000012  00000000  00000000  0000a050  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 0000001c  00000000  00000000  0000a062  2**0
                  CONTENTS, READONLY
 28 .jdi          00004e4d  00000000  00000000  0000a07e  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     0003aca8  00000000  00000000  0000eecb  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800184 l    d  .text	00000000 .text
00801814 l    d  .rodata	00000000 .rodata
00801940 l    d  .rwdata	00000000 .rwdata
00801d30 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
0080019c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 fp-bit.c
0080071c l     F .text	000001e4 _fpadd_parts
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 alt_dcache_flush.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
00801940 l     O .rwdata	0000002c jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
008015d4 l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00801628 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 int_errno.c
00800718 g     F .text	00000004 alt_main
00801d48 g     O .bss	00000100 alt_irq
00801b38 g       *ABS*	00000000 __flash_rwdata_start
00800bb4 g     F .text	00000174 __divsf3
00000000  w      *UND*	00000000 __errno
00800000 g     F .entry	0000000c __reset
00800020 g       *ABS*	00000000 __flash_exceptions_start
00801d44 g     O .bss	00000004 errno
00809b14 g       *ABS*	00000000 _gp
00800900 g     F .text	00000070 __subsf3
00801994 g     O .rwdata	00000180 alt_fd_list
0080036c g     F .text	0000000c det_status
008014bc g     F .text	0000008c altera_avalon_jtag_uart_read
008017dc g     F .text	00000038 alt_icache_flush
00801d30 g     O .bss	00000004 irqcommunicationtest
00801240 g     F .text	00000028 alt_dcache_flush
00801b28 g     O .rwdata	00000004 alt_max_fd
00800d28 g     F .text	00000078 __nesf2
00801e48 g       *ABS*	00000000 __bss_end
00801304 g     F .text	00000088 alt_iic_isr_register
008016ec g     F .text	000000e8 alt_tick
00801268 g     F .text	00000018 alt_ic_irq_enabled
0080064c g     F .text	00000014 det_done_isr
008016b8 g     F .text	00000034 alt_alarm_stop
00801d38 g     O .bss	00000004 alt_irq_active
008000ec g     F .exceptions	00000098 alt_irq_handler
0080196c g     O .rwdata	00000028 alt_dev_null
008010b0 g     F .text	000000c8 __unpack_f
00801610 g     F .text	00000018 alt_dcache_flush_all
00801b38 g       *ABS*	00000000 __ram_rwdata_end
00801b20 g     O .rwdata	00000008 alt_dev_list
00801940 g       *ABS*	00000000 __ram_rodata_end
00801d34 g     O .bss	00000004 tempmat
00801e48 g       *ABS*	00000000 end
00800f50 g     F .text	00000160 __pack_f
01000000 g       *ABS*	00000000 __alt_stack_pointer
00801584 g     F .text	00000050 alt_avalon_timer_sc_init
00800ed0 g     F .text	00000080 __clzsi2
00801548 g     F .text	0000003c altera_avalon_jtag_uart_write
0080034c g     F .text	00000020 det_result
00800184 g     F .text	0000001c _start
00801d3c g     O .bss	00000004 _alt_tick_rate
00800378 g     F .text	000002d4 detmat
00801d40 g     O .bss	00000004 _alt_nticks
00801440 g     F .text	0000003c alt_sys_init
00800da0 g     F .text	00000098 __floatsisf
00801940 g       *ABS*	00000000 __ram_rwdata_start
00801814 g       *ABS*	00000000 __ram_rodata_start
008014ac g     F .text	00000010 altera_avalon_jtag_uart_read_fd
00801e48 g       *ABS*	00000000 __alt_stack_base
00801814 g     O .rodata	00000010 __thenan_sf
00801630 g     F .text	0000007c alt_dev_llist_insert
00801d30 g       *ABS*	00000000 __bss_start
00801220 g     F .text	00000020 memset
00800660 g     F .text	000000b8 main
0080149c g     F .text	00000010 altera_avalon_jtag_uart_write_fd
008002a4 g     F .text	0000002c rswap
00801b2c g     O .rwdata	00000004 alt_errno
008009d4 g     F .text	000001e0 __mulsf3
00801814 g       *ABS*	00000000 __flash_rodata_start
0080147c g     F .text	00000020 alt_irq_init
00801824 g     O .rodata	00000100 __clz_tab
00800000 g       *ABS*	00000000 __alt_mem_sdram_0
00800020 g       .exceptions	00000000 alt_irq_entry
00801b18 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00801300 g     F .text	00000004 alt_ic_isr_register
00801b38 g       *ABS*	00000000 _edata
00801e48 g       *ABS*	00000000 _end
00800184 g       *ABS*	00000000 __ram_exceptions_end
008012c0 g     F .text	00000040 alt_ic_irq_disable
0080031c g     F .text	00000030 reg_isr
008017d4 g     F .text	00000008 altera_nios2_qsys_irq_init
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00801178 g     F .text	000000a8 __fpcmp_parts_f
00800e38 g     F .text	00000098 __muldi3
008002d0 g     F .text	0000004c det_start
008016ac g     F .text	0000000c alt_icache_flush_all
00801b14 g     O .rwdata	00000004 alt_priority_mask
00801280 g     F .text	00000040 alt_ic_irq_enable
00801b30 g     O .rwdata	00000008 alt_alarm_list
00800970 g     F .text	00000064 __addsf3
0080138c g     F .text	000000b4 alt_load
008001a0 g     F .text	00000104 det3x3



Disassembly of section .entry:

00800000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800000:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800004:	08406114 	ori	at,at,388
    jmp r1
  800008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00800020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
  800044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000ec0 	call	8000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000306 	br	800098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  800094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  800098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  80009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
  8000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
  8000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000e8:	ef80083a 	eret

008000ec <alt_irq_handler>:
  8000ec:	defffe04 	addi	sp,sp,-8
  8000f0:	dfc00115 	stw	ra,4(sp)
  8000f4:	dc000015 	stw	r16,0(sp)
  8000f8:	000b313a 	rdctl	r5,ipending
  8000fc:	2880004c 	andi	r2,r5,1
  800100:	1005003a 	cmpeq	r2,r2,zero
  800104:	04002034 	movhi	r16,128
  800108:	84075204 	addi	r16,r16,7496
  80010c:	10001126 	beq	r2,zero,800154 <alt_irq_handler+0x68>
  800110:	00c00044 	movi	r3,1
  800114:	0009883a 	mov	r4,zero
  800118:	18c7883a 	add	r3,r3,r3
  80011c:	28c4703a 	and	r2,r5,r3
  800120:	21000044 	addi	r4,r4,1
  800124:	103ffc26 	beq	r2,zero,800118 <alt_irq_handler+0x2c>
  800128:	200490fa 	slli	r2,r4,3
  80012c:	1405883a 	add	r2,r2,r16
  800130:	11000117 	ldw	r4,4(r2)
  800134:	10c00017 	ldw	r3,0(r2)
  800138:	183ee83a 	callr	r3
  80013c:	0005313a 	rdctl	r2,ipending
  800140:	10000c26 	beq	r2,zero,800174 <alt_irq_handler+0x88>
  800144:	100b883a 	mov	r5,r2
  800148:	2880004c 	andi	r2,r5,1
  80014c:	1005003a 	cmpeq	r2,r2,zero
  800150:	103fef1e 	bne	r2,zero,800110 <alt_irq_handler+0x24>
  800154:	0009883a 	mov	r4,zero
  800158:	200490fa 	slli	r2,r4,3
  80015c:	1405883a 	add	r2,r2,r16
  800160:	11000117 	ldw	r4,4(r2)
  800164:	10c00017 	ldw	r3,0(r2)
  800168:	183ee83a 	callr	r3
  80016c:	0005313a 	rdctl	r2,ipending
  800170:	103ff41e 	bne	r2,zero,800144 <alt_irq_handler+0x58>
  800174:	dfc00117 	ldw	ra,4(sp)
  800178:	dc000017 	ldw	r16,0(sp)
  80017c:	dec00204 	addi	sp,sp,8
  800180:	f800283a 	ret

Disassembly of section .text:

00800184 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800184:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800188:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
  80018c:	06802034 	movhi	gp,128
    ori gp, gp, %lo(_gp)
  800190:	d6a6c514 	ori	gp,gp,39700
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800194:	080138c0 	call	80138c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800198:	08007180 	call	800718 <alt_main>

0080019c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80019c:	003fff06 	br	80019c <alt_after_alt_main>

008001a0 <det3x3>:
  8001a0:	defffa04 	addi	sp,sp,-24
  8001a4:	dfc00515 	stw	ra,20(sp)
  8001a8:	dd400415 	stw	r21,16(sp)
  8001ac:	dd000315 	stw	r20,12(sp)
  8001b0:	dcc00215 	stw	r19,8(sp)
  8001b4:	25000604 	addi	r20,r4,24
  8001b8:	24c00304 	addi	r19,r4,12
  8001bc:	dc800115 	stw	r18,4(sp)
  8001c0:	dc400015 	stw	r17,0(sp)
  8001c4:	2023883a 	mov	r17,r4
  8001c8:	99000117 	ldw	r4,4(r19)
  8001cc:	a1400217 	ldw	r5,8(r20)
  8001d0:	08009d40 	call	8009d4 <__mulsf3>
  8001d4:	a1000117 	ldw	r4,4(r20)
  8001d8:	99400217 	ldw	r5,8(r19)
  8001dc:	1025883a 	mov	r18,r2
  8001e0:	08009d40 	call	8009d4 <__mulsf3>
  8001e4:	100b883a 	mov	r5,r2
  8001e8:	9009883a 	mov	r4,r18
  8001ec:	08009000 	call	800900 <__subsf3>
  8001f0:	89400017 	ldw	r5,0(r17)
  8001f4:	1009883a 	mov	r4,r2
  8001f8:	08009d40 	call	8009d4 <__mulsf3>
  8001fc:	89000117 	ldw	r4,4(r17)
  800200:	a1400217 	ldw	r5,8(r20)
  800204:	102b883a 	mov	r21,r2
  800208:	08009d40 	call	8009d4 <__mulsf3>
  80020c:	a1000117 	ldw	r4,4(r20)
  800210:	89400217 	ldw	r5,8(r17)
  800214:	1025883a 	mov	r18,r2
  800218:	08009d40 	call	8009d4 <__mulsf3>
  80021c:	100b883a 	mov	r5,r2
  800220:	9009883a 	mov	r4,r18
  800224:	08009000 	call	800900 <__subsf3>
  800228:	99400017 	ldw	r5,0(r19)
  80022c:	1009883a 	mov	r4,r2
  800230:	08009d40 	call	8009d4 <__mulsf3>
  800234:	100b883a 	mov	r5,r2
  800238:	a809883a 	mov	r4,r21
  80023c:	08009000 	call	800900 <__subsf3>
  800240:	89000117 	ldw	r4,4(r17)
  800244:	99400217 	ldw	r5,8(r19)
  800248:	102b883a 	mov	r21,r2
  80024c:	08009d40 	call	8009d4 <__mulsf3>
  800250:	99000117 	ldw	r4,4(r19)
  800254:	89400217 	ldw	r5,8(r17)
  800258:	1025883a 	mov	r18,r2
  80025c:	08009d40 	call	8009d4 <__mulsf3>
  800260:	100b883a 	mov	r5,r2
  800264:	9009883a 	mov	r4,r18
  800268:	08009000 	call	800900 <__subsf3>
  80026c:	a1400017 	ldw	r5,0(r20)
  800270:	1009883a 	mov	r4,r2
  800274:	08009d40 	call	8009d4 <__mulsf3>
  800278:	100b883a 	mov	r5,r2
  80027c:	a809883a 	mov	r4,r21
  800280:	08009700 	call	800970 <__addsf3>
  800284:	dfc00517 	ldw	ra,20(sp)
  800288:	dd400417 	ldw	r21,16(sp)
  80028c:	dd000317 	ldw	r20,12(sp)
  800290:	dcc00217 	ldw	r19,8(sp)
  800294:	dc800117 	ldw	r18,4(sp)
  800298:	dc400017 	ldw	r17,0(sp)
  80029c:	dec00604 	addi	sp,sp,24
  8002a0:	f800283a 	ret

008002a4 <rswap>:
  8002a4:	318d883a 	add	r6,r6,r6
  8002a8:	294b883a 	add	r5,r5,r5
  8002ac:	318d883a 	add	r6,r6,r6
  8002b0:	218d883a 	add	r6,r4,r6
  8002b4:	294b883a 	add	r5,r5,r5
  8002b8:	290b883a 	add	r5,r5,r4
  8002bc:	30800017 	ldw	r2,0(r6)
  8002c0:	28c00017 	ldw	r3,0(r5)
  8002c4:	28800015 	stw	r2,0(r5)
  8002c8:	30c00015 	stw	r3,0(r6)
  8002cc:	f800283a 	ret

008002d0 <det_start>:
  8002d0:	defffd04 	addi	sp,sp,-12
  8002d4:	dc400015 	stw	r17,0(sp)
  8002d8:	2823883a 	mov	r17,r5
  8002dc:	294b383a 	mul	r5,r5,r5
  8002e0:	dc800115 	stw	r18,4(sp)
  8002e4:	dfc00215 	stw	ra,8(sp)
  8002e8:	294b883a 	add	r5,r5,r5
  8002ec:	294b883a 	add	r5,r5,r5
  8002f0:	2025883a 	mov	r18,r4
  8002f4:	08012400 	call	801240 <alt_dcache_flush>
  8002f8:	0005883a 	mov	r2,zero
  8002fc:	14800035 	stwio	r18,0(r2)
  800300:	00c00104 	movi	r3,4
  800304:	1c400035 	stwio	r17,0(r3)
  800308:	dfc00217 	ldw	ra,8(sp)
  80030c:	dc800117 	ldw	r18,4(sp)
  800310:	dc400017 	ldw	r17,0(sp)
  800314:	dec00304 	addi	sp,sp,12
  800318:	f800283a 	ret

0080031c <reg_isr>:
  80031c:	defffe04 	addi	sp,sp,-8
  800320:	0009883a 	mov	r4,zero
  800324:	01400504 	movi	r5,20
  800328:	01802034 	movhi	r6,128
  80032c:	31819304 	addi	r6,r6,1612
  800330:	000f883a 	mov	r7,zero
  800334:	dfc00115 	stw	ra,4(sp)
  800338:	d8000015 	stw	zero,0(sp)
  80033c:	08013000 	call	801300 <alt_ic_isr_register>
  800340:	dfc00117 	ldw	ra,4(sp)
  800344:	dec00204 	addi	sp,sp,8
  800348:	f800283a 	ret

0080034c <det_result>:
  80034c:	deffff04 	addi	sp,sp,-4
  800350:	dfc00015 	stw	ra,0(sp)
  800354:	0005883a 	mov	r2,zero
  800358:	11000037 	ldwio	r4,0(r2)
  80035c:	0800da00 	call	800da0 <__floatsisf>
  800360:	dfc00017 	ldw	ra,0(sp)
  800364:	dec00104 	addi	sp,sp,4
  800368:	f800283a 	ret

0080036c <det_status>:
  80036c:	00c00104 	movi	r3,4
  800370:	18800037 	ldwio	r2,0(r3)
  800374:	f800283a 	ret

00800378 <detmat>:
  800378:	d0a08817 	ldw	r2,-32224(gp)
  80037c:	defff204 	addi	sp,sp,-56
  800380:	dfc00d15 	stw	ra,52(sp)
  800384:	df000c15 	stw	fp,48(sp)
  800388:	ddc00b15 	stw	r23,44(sp)
  80038c:	dd800a15 	stw	r22,40(sp)
  800390:	dd400915 	stw	r21,36(sp)
  800394:	dd000815 	stw	r20,32(sp)
  800398:	dcc00715 	stw	r19,28(sp)
  80039c:	dc800615 	stw	r18,24(sp)
  8003a0:	dc400515 	stw	r17,20(sp)
  8003a4:	dc000415 	stw	r16,16(sp)
  8003a8:	d8800315 	stw	r2,12(sp)
  8003ac:	200d883a 	mov	r6,r4
  8003b0:	000f883a 	mov	r7,zero
  8003b4:	1013883a 	mov	r9,r2
  8003b8:	49c5883a 	add	r2,r9,r7
  8003bc:	30c00017 	ldw	r3,0(r6)
  8003c0:	11000017 	ldw	r4,0(r2)
  8003c4:	39c00104 	addi	r7,r7,4
  8003c8:	20c00015 	stw	r3,0(r4)
  8003cc:	30800117 	ldw	r2,4(r6)
  8003d0:	20800115 	stw	r2,4(r4)
  8003d4:	30c00217 	ldw	r3,8(r6)
  8003d8:	20c00215 	stw	r3,8(r4)
  8003dc:	30800317 	ldw	r2,12(r6)
  8003e0:	20800315 	stw	r2,12(r4)
  8003e4:	30c00417 	ldw	r3,16(r6)
  8003e8:	20c00415 	stw	r3,16(r4)
  8003ec:	30800517 	ldw	r2,20(r6)
  8003f0:	20800515 	stw	r2,20(r4)
  8003f4:	30c00617 	ldw	r3,24(r6)
  8003f8:	20c00615 	stw	r3,24(r4)
  8003fc:	30800717 	ldw	r2,28(r6)
  800400:	20800715 	stw	r2,28(r4)
  800404:	30c00817 	ldw	r3,32(r6)
  800408:	00800a04 	movi	r2,40
  80040c:	20c00815 	stw	r3,32(r4)
  800410:	31400917 	ldw	r5,36(r6)
  800414:	31800a04 	addi	r6,r6,40
  800418:	21400915 	stw	r5,36(r4)
  80041c:	38bfe61e 	bne	r7,r2,8003b8 <detmat+0x40>
  800420:	008fe034 	movhi	r2,16256
  800424:	d8800015 	stw	r2,0(sp)
  800428:	0025883a 	mov	r18,zero
  80042c:	d8000215 	stw	zero,8(sp)
  800430:	0023883a 	mov	r17,zero
  800434:	d8c00317 	ldw	r3,12(sp)
  800438:	8c79883a 	add	fp,r17,r17
  80043c:	000b883a 	mov	r5,zero
  800440:	e0e1883a 	add	r16,fp,r3
  800444:	80800017 	ldw	r2,0(r16)
  800448:	172f883a 	add	r23,r2,fp
  80044c:	b9000017 	ldw	r4,0(r23)
  800450:	0800d280 	call	800d28 <__nesf2>
  800454:	10002426 	beq	r2,zero,8004e8 <detmat+0x170>
  800458:	d9000217 	ldw	r4,8(sp)
  80045c:	00800244 	movi	r2,9
  800460:	21000044 	addi	r4,r4,1
  800464:	d9000115 	stw	r4,4(sp)
  800468:	11003816 	blt	r2,r4,80054c <detmat+0x1d4>
  80046c:	85400104 	addi	r21,r16,4
  800470:	2029883a 	mov	r20,r4
  800474:	05800284 	movi	r22,10
  800478:	a8800017 	ldw	r2,0(r21)
  80047c:	b9400017 	ldw	r5,0(r23)
  800480:	dc400217 	ldw	r17,8(sp)
  800484:	e085883a 	add	r2,fp,r2
  800488:	11000017 	ldw	r4,0(r2)
  80048c:	1021883a 	mov	r16,r2
  800490:	b825883a 	mov	r18,r23
  800494:	0800bb40 	call	800bb4 <__divsf3>
  800498:	1027883a 	mov	r19,r2
  80049c:	91400017 	ldw	r5,0(r18)
  8004a0:	9809883a 	mov	r4,r19
  8004a4:	8c400044 	addi	r17,r17,1
  8004a8:	08009d40 	call	8009d4 <__mulsf3>
  8004ac:	81000017 	ldw	r4,0(r16)
  8004b0:	100b883a 	mov	r5,r2
  8004b4:	94800104 	addi	r18,r18,4
  8004b8:	08009000 	call	800900 <__subsf3>
  8004bc:	80800015 	stw	r2,0(r16)
  8004c0:	84000104 	addi	r16,r16,4
  8004c4:	8dbff51e 	bne	r17,r22,80049c <detmat+0x124>
  8004c8:	a5000044 	addi	r20,r20,1
  8004cc:	ad400104 	addi	r21,r21,4
  8004d0:	a47fe91e 	bne	r20,r17,800478 <detmat+0x100>
  8004d4:	da400117 	ldw	r9,4(sp)
  8004d8:	0025883a 	mov	r18,zero
  8004dc:	4a63883a 	add	r17,r9,r9
  8004e0:	da400215 	stw	r9,8(sp)
  8004e4:	003fd306 	br	800434 <detmat+0xbc>
  8004e8:	d9000217 	ldw	r4,8(sp)
  8004ec:	00c00244 	movi	r3,9
  8004f0:	1905c83a 	sub	r2,r3,r4
  8004f4:	14805326 	beq	r2,r18,800644 <detmat+0x2cc>
  8004f8:	00800204 	movi	r2,8
  8004fc:	11001116 	blt	r2,r4,800544 <detmat+0x1cc>
  800500:	800d883a 	mov	r6,r16
  800504:	1811883a 	mov	r8,r3
  800508:	81400104 	addi	r5,r16,4
  80050c:	200f883a 	mov	r7,r4
  800510:	28800017 	ldw	r2,0(r5)
  800514:	da400017 	ldw	r9,0(sp)
  800518:	30c00017 	ldw	r3,0(r6)
  80051c:	39c00044 	addi	r7,r7,1
  800520:	30800015 	stw	r2,0(r6)
  800524:	4920003c 	xorhi	r4,r9,32768
  800528:	28c00015 	stw	r3,0(r5)
  80052c:	d9000015 	stw	r4,0(sp)
  800530:	31800104 	addi	r6,r6,4
  800534:	29400104 	addi	r5,r5,4
  800538:	3a3ff51e 	bne	r7,r8,800510 <detmat+0x198>
  80053c:	94800044 	addi	r18,r18,1
  800540:	003fbc06 	br	800434 <detmat+0xbc>
  800544:	d8800217 	ldw	r2,8(sp)
  800548:	18bffc0e 	bge	r3,r2,80053c <detmat+0x1c4>
  80054c:	d8c00317 	ldw	r3,12(sp)
  800550:	d9000017 	ldw	r4,0(sp)
  800554:	18800017 	ldw	r2,0(r3)
  800558:	11400017 	ldw	r5,0(r2)
  80055c:	08009d40 	call	8009d4 <__mulsf3>
  800560:	d9000317 	ldw	r4,12(sp)
  800564:	20c00117 	ldw	r3,4(r4)
  800568:	1009883a 	mov	r4,r2
  80056c:	19400117 	ldw	r5,4(r3)
  800570:	08009d40 	call	8009d4 <__mulsf3>
  800574:	da400317 	ldw	r9,12(sp)
  800578:	1009883a 	mov	r4,r2
  80057c:	48c00217 	ldw	r3,8(r9)
  800580:	19400217 	ldw	r5,8(r3)
  800584:	08009d40 	call	8009d4 <__mulsf3>
  800588:	d9000317 	ldw	r4,12(sp)
  80058c:	20c00317 	ldw	r3,12(r4)
  800590:	1009883a 	mov	r4,r2
  800594:	19400317 	ldw	r5,12(r3)
  800598:	08009d40 	call	8009d4 <__mulsf3>
  80059c:	da400317 	ldw	r9,12(sp)
  8005a0:	1009883a 	mov	r4,r2
  8005a4:	48c00417 	ldw	r3,16(r9)
  8005a8:	19400417 	ldw	r5,16(r3)
  8005ac:	08009d40 	call	8009d4 <__mulsf3>
  8005b0:	d9000317 	ldw	r4,12(sp)
  8005b4:	20c00517 	ldw	r3,20(r4)
  8005b8:	1009883a 	mov	r4,r2
  8005bc:	19400517 	ldw	r5,20(r3)
  8005c0:	08009d40 	call	8009d4 <__mulsf3>
  8005c4:	da400317 	ldw	r9,12(sp)
  8005c8:	1009883a 	mov	r4,r2
  8005cc:	48c00617 	ldw	r3,24(r9)
  8005d0:	19400617 	ldw	r5,24(r3)
  8005d4:	08009d40 	call	8009d4 <__mulsf3>
  8005d8:	d9000317 	ldw	r4,12(sp)
  8005dc:	20c00717 	ldw	r3,28(r4)
  8005e0:	1009883a 	mov	r4,r2
  8005e4:	19400717 	ldw	r5,28(r3)
  8005e8:	08009d40 	call	8009d4 <__mulsf3>
  8005ec:	da400317 	ldw	r9,12(sp)
  8005f0:	1009883a 	mov	r4,r2
  8005f4:	48c00817 	ldw	r3,32(r9)
  8005f8:	19400817 	ldw	r5,32(r3)
  8005fc:	08009d40 	call	8009d4 <__mulsf3>
  800600:	d9000317 	ldw	r4,12(sp)
  800604:	20c00917 	ldw	r3,36(r4)
  800608:	1009883a 	mov	r4,r2
  80060c:	19400917 	ldw	r5,36(r3)
  800610:	08009d40 	call	8009d4 <__mulsf3>
  800614:	dfc00d17 	ldw	ra,52(sp)
  800618:	df000c17 	ldw	fp,48(sp)
  80061c:	ddc00b17 	ldw	r23,44(sp)
  800620:	dd800a17 	ldw	r22,40(sp)
  800624:	dd400917 	ldw	r21,36(sp)
  800628:	dd000817 	ldw	r20,32(sp)
  80062c:	dcc00717 	ldw	r19,28(sp)
  800630:	dc800617 	ldw	r18,24(sp)
  800634:	dc400517 	ldw	r17,20(sp)
  800638:	dc000417 	ldw	r16,16(sp)
  80063c:	dec00e04 	addi	sp,sp,56
  800640:	f800283a 	ret
  800644:	0005883a 	mov	r2,zero
  800648:	003ff206 	br	800614 <detmat+0x29c>

0080064c <det_done_isr>:
  80064c:	0005883a 	mov	r2,zero
  800650:	11000037 	ldwio	r4,0(r2)
  800654:	00c00044 	movi	r3,1
  800658:	d0e08715 	stw	r3,-32228(gp)
  80065c:	f800283a 	ret

00800660 <main>:
  800660:	deffe404 	addi	sp,sp,-112
  800664:	0009883a 	mov	r4,zero
  800668:	dfc01b15 	stw	ra,108(sp)
  80066c:	dc001a15 	stw	r16,104(sp)
  800670:	080147c0 	call	80147c <alt_irq_init>
  800674:	01400504 	movi	r5,20
  800678:	0009883a 	mov	r4,zero
  80067c:	01802034 	movhi	r6,128
  800680:	31819304 	addi	r6,r6,1612
  800684:	000f883a 	mov	r7,zero
  800688:	d8000015 	stw	zero,0(sp)
  80068c:	04004034 	movhi	r16,256
  800690:	84040804 	addi	r16,r16,4128
  800694:	08013000 	call	801300 <alt_ic_isr_register>
  800698:	80800035 	stwio	r2,0(r16)
  80069c:	d9000104 	addi	r4,sp,4
  8006a0:	01801904 	movi	r6,100
  8006a4:	000b883a 	mov	r5,zero
  8006a8:	08012200 	call	801220 <memset>
  8006ac:	008f7374 	movhi	r2,15821
  8006b0:	10b33344 	addi	r2,r2,-13107
  8006b4:	00cfc6b4 	movhi	r3,16154
  8006b8:	18e66684 	addi	r3,r3,-26214
  8006bc:	d8800115 	stw	r2,4(sp)
  8006c0:	d8c00215 	stw	r3,8(sp)
  8006c4:	009016b4 	movhi	r2,16474
  8006c8:	10a66684 	addi	r2,r2,-26214
  8006cc:	00f001b4 	movhi	r3,49158
  8006d0:	18d99984 	addi	r3,r3,26214
  8006d4:	d9000104 	addi	r4,sp,4
  8006d8:	01401904 	movi	r5,100
  8006dc:	d8800615 	stw	r2,24(sp)
  8006e0:	d8c00715 	stw	r3,28(sp)
  8006e4:	08012400 	call	801240 <alt_dcache_flush>
  8006e8:	0005883a 	mov	r2,zero
  8006ec:	d8c00104 	addi	r3,sp,4
  8006f0:	10c00035 	stwio	r3,0(r2)
  8006f4:	01000144 	movi	r4,5
  8006f8:	00800104 	movi	r2,4
  8006fc:	11000035 	stwio	r4,0(r2)
  800700:	d0e08717 	ldw	r3,-32228(gp)
  800704:	18000326 	beq	r3,zero,800714 <main+0xb4>
  800708:	00800044 	movi	r2,1
  80070c:	80800035 	stwio	r2,0(r16)
  800710:	003fff06 	br	800710 <main+0xb0>
  800714:	003fff06 	br	800714 <main+0xb4>

00800718 <alt_main>:
  800718:	08006601 	jmpi	800660 <main>

0080071c <_fpadd_parts>:
  80071c:	21c00017 	ldw	r7,0(r4)
  800720:	02000044 	movi	r8,1
  800724:	41c0332e 	bgeu	r8,r7,8007f4 <_fpadd_parts+0xd8>
  800728:	28800017 	ldw	r2,0(r5)
  80072c:	4080462e 	bgeu	r8,r2,800848 <_fpadd_parts+0x12c>
  800730:	00c00104 	movi	r3,4
  800734:	38c06b26 	beq	r7,r3,8008e4 <_fpadd_parts+0x1c8>
  800738:	10c04326 	beq	r2,r3,800848 <_fpadd_parts+0x12c>
  80073c:	00c00084 	movi	r3,2
  800740:	10c02e26 	beq	r2,r3,8007fc <_fpadd_parts+0xe0>
  800744:	38c04026 	beq	r7,r3,800848 <_fpadd_parts+0x12c>
  800748:	22800217 	ldw	r10,8(r4)
  80074c:	28c00217 	ldw	r3,8(r5)
  800750:	23000317 	ldw	r12,12(r4)
  800754:	2a400317 	ldw	r9,12(r5)
  800758:	50cfc83a 	sub	r7,r10,r3
  80075c:	3817883a 	mov	r11,r7
  800760:	38004f16 	blt	r7,zero,8008a0 <_fpadd_parts+0x184>
  800764:	008007c4 	movi	r2,31
  800768:	11c03316 	blt	r2,r7,800838 <_fpadd_parts+0x11c>
  80076c:	02c0540e 	bge	zero,r11,8008c0 <_fpadd_parts+0x1a4>
  800770:	41c4983a 	sll	r2,r8,r7
  800774:	49c6d83a 	srl	r3,r9,r7
  800778:	10bfffc4 	addi	r2,r2,-1
  80077c:	4884703a 	and	r2,r9,r2
  800780:	1004c03a 	cmpne	r2,r2,zero
  800784:	1892b03a 	or	r9,r3,r2
  800788:	20c00117 	ldw	r3,4(r4)
  80078c:	28800117 	ldw	r2,4(r5)
  800790:	18803c26 	beq	r3,r2,800884 <_fpadd_parts+0x168>
  800794:	18002f26 	beq	r3,zero,800854 <_fpadd_parts+0x138>
  800798:	4b05c83a 	sub	r2,r9,r12
  80079c:	10004216 	blt	r2,zero,8008a8 <_fpadd_parts+0x18c>
  8007a0:	32800215 	stw	r10,8(r6)
  8007a4:	30800315 	stw	r2,12(r6)
  8007a8:	30000115 	stw	zero,4(r6)
  8007ac:	31000317 	ldw	r4,12(r6)
  8007b0:	01d00034 	movhi	r7,16384
  8007b4:	39ffff84 	addi	r7,r7,-2
  8007b8:	20bfffc4 	addi	r2,r4,-1
  8007bc:	2007883a 	mov	r3,r4
  8007c0:	38800836 	bltu	r7,r2,8007e4 <_fpadd_parts+0xc8>
  8007c4:	31400217 	ldw	r5,8(r6)
  8007c8:	18c9883a 	add	r4,r3,r3
  8007cc:	20bfffc4 	addi	r2,r4,-1
  8007d0:	297fffc4 	addi	r5,r5,-1
  8007d4:	2007883a 	mov	r3,r4
  8007d8:	38bffb2e 	bgeu	r7,r2,8007c8 <_fpadd_parts+0xac>
  8007dc:	31400215 	stw	r5,8(r6)
  8007e0:	31000315 	stw	r4,12(r6)
  8007e4:	008000c4 	movi	r2,3
  8007e8:	30800015 	stw	r2,0(r6)
  8007ec:	20001b16 	blt	r4,zero,80085c <_fpadd_parts+0x140>
  8007f0:	3009883a 	mov	r4,r6
  8007f4:	2005883a 	mov	r2,r4
  8007f8:	f800283a 	ret
  8007fc:	38fffd1e 	bne	r7,r3,8007f4 <_fpadd_parts+0xd8>
  800800:	31c00015 	stw	r7,0(r6)
  800804:	20800117 	ldw	r2,4(r4)
  800808:	30800115 	stw	r2,4(r6)
  80080c:	20c00217 	ldw	r3,8(r4)
  800810:	30c00215 	stw	r3,8(r6)
  800814:	20800317 	ldw	r2,12(r4)
  800818:	30800315 	stw	r2,12(r6)
  80081c:	20c00117 	ldw	r3,4(r4)
  800820:	28800117 	ldw	r2,4(r5)
  800824:	3009883a 	mov	r4,r6
  800828:	1886703a 	and	r3,r3,r2
  80082c:	2005883a 	mov	r2,r4
  800830:	30c00115 	stw	r3,4(r6)
  800834:	f800283a 	ret
  800838:	1a801716 	blt	r3,r10,800898 <_fpadd_parts+0x17c>
  80083c:	1815883a 	mov	r10,r3
  800840:	0019883a 	mov	r12,zero
  800844:	003fd006 	br	800788 <_fpadd_parts+0x6c>
  800848:	2809883a 	mov	r4,r5
  80084c:	2005883a 	mov	r2,r4
  800850:	f800283a 	ret
  800854:	6245c83a 	sub	r2,r12,r9
  800858:	003fd006 	br	80079c <_fpadd_parts+0x80>
  80085c:	30800217 	ldw	r2,8(r6)
  800860:	2006d07a 	srli	r3,r4,1
  800864:	2100004c 	andi	r4,r4,1
  800868:	10800044 	addi	r2,r2,1
  80086c:	1906b03a 	or	r3,r3,r4
  800870:	3009883a 	mov	r4,r6
  800874:	30800215 	stw	r2,8(r6)
  800878:	2005883a 	mov	r2,r4
  80087c:	30c00315 	stw	r3,12(r6)
  800880:	f800283a 	ret
  800884:	4b09883a 	add	r4,r9,r12
  800888:	30c00115 	stw	r3,4(r6)
  80088c:	32800215 	stw	r10,8(r6)
  800890:	31000315 	stw	r4,12(r6)
  800894:	003fd306 	br	8007e4 <_fpadd_parts+0xc8>
  800898:	0013883a 	mov	r9,zero
  80089c:	003fba06 	br	800788 <_fpadd_parts+0x6c>
  8008a0:	01cfc83a 	sub	r7,zero,r7
  8008a4:	003faf06 	br	800764 <_fpadd_parts+0x48>
  8008a8:	0089c83a 	sub	r4,zero,r2
  8008ac:	00800044 	movi	r2,1
  8008b0:	30800115 	stw	r2,4(r6)
  8008b4:	32800215 	stw	r10,8(r6)
  8008b8:	31000315 	stw	r4,12(r6)
  8008bc:	003fbb06 	br	8007ac <_fpadd_parts+0x90>
  8008c0:	583fb126 	beq	r11,zero,800788 <_fpadd_parts+0x6c>
  8008c4:	41c4983a 	sll	r2,r8,r7
  8008c8:	61c6d83a 	srl	r3,r12,r7
  8008cc:	51d5883a 	add	r10,r10,r7
  8008d0:	10bfffc4 	addi	r2,r2,-1
  8008d4:	6084703a 	and	r2,r12,r2
  8008d8:	1004c03a 	cmpne	r2,r2,zero
  8008dc:	1898b03a 	or	r12,r3,r2
  8008e0:	003fa906 	br	800788 <_fpadd_parts+0x6c>
  8008e4:	11ffc31e 	bne	r2,r7,8007f4 <_fpadd_parts+0xd8>
  8008e8:	28c00117 	ldw	r3,4(r5)
  8008ec:	20800117 	ldw	r2,4(r4)
  8008f0:	10ffc026 	beq	r2,r3,8007f4 <_fpadd_parts+0xd8>
  8008f4:	01002034 	movhi	r4,128
  8008f8:	21060504 	addi	r4,r4,6164
  8008fc:	003fbd06 	br	8007f4 <_fpadd_parts+0xd8>

00800900 <__subsf3>:
  800900:	deffef04 	addi	sp,sp,-68
  800904:	dcc00f15 	stw	r19,60(sp)
  800908:	dcc00204 	addi	r19,sp,8
  80090c:	dc400e15 	stw	r17,56(sp)
  800910:	d9000015 	stw	r4,0(sp)
  800914:	d9400115 	stw	r5,4(sp)
  800918:	d809883a 	mov	r4,sp
  80091c:	980b883a 	mov	r5,r19
  800920:	dc400604 	addi	r17,sp,24
  800924:	dfc01015 	stw	ra,64(sp)
  800928:	08010b00 	call	8010b0 <__unpack_f>
  80092c:	d9000104 	addi	r4,sp,4
  800930:	880b883a 	mov	r5,r17
  800934:	08010b00 	call	8010b0 <__unpack_f>
  800938:	d8800717 	ldw	r2,28(sp)
  80093c:	9809883a 	mov	r4,r19
  800940:	880b883a 	mov	r5,r17
  800944:	d9800a04 	addi	r6,sp,40
  800948:	1080005c 	xori	r2,r2,1
  80094c:	d8800715 	stw	r2,28(sp)
  800950:	080071c0 	call	80071c <_fpadd_parts>
  800954:	1009883a 	mov	r4,r2
  800958:	0800f500 	call	800f50 <__pack_f>
  80095c:	dfc01017 	ldw	ra,64(sp)
  800960:	dcc00f17 	ldw	r19,60(sp)
  800964:	dc400e17 	ldw	r17,56(sp)
  800968:	dec01104 	addi	sp,sp,68
  80096c:	f800283a 	ret

00800970 <__addsf3>:
  800970:	deffef04 	addi	sp,sp,-68
  800974:	dcc00f15 	stw	r19,60(sp)
  800978:	dcc00204 	addi	r19,sp,8
  80097c:	dc400e15 	stw	r17,56(sp)
  800980:	d9000015 	stw	r4,0(sp)
  800984:	d9400115 	stw	r5,4(sp)
  800988:	d809883a 	mov	r4,sp
  80098c:	980b883a 	mov	r5,r19
  800990:	dc400604 	addi	r17,sp,24
  800994:	dfc01015 	stw	ra,64(sp)
  800998:	08010b00 	call	8010b0 <__unpack_f>
  80099c:	d9000104 	addi	r4,sp,4
  8009a0:	880b883a 	mov	r5,r17
  8009a4:	08010b00 	call	8010b0 <__unpack_f>
  8009a8:	d9800a04 	addi	r6,sp,40
  8009ac:	9809883a 	mov	r4,r19
  8009b0:	880b883a 	mov	r5,r17
  8009b4:	080071c0 	call	80071c <_fpadd_parts>
  8009b8:	1009883a 	mov	r4,r2
  8009bc:	0800f500 	call	800f50 <__pack_f>
  8009c0:	dfc01017 	ldw	ra,64(sp)
  8009c4:	dcc00f17 	ldw	r19,60(sp)
  8009c8:	dc400e17 	ldw	r17,56(sp)
  8009cc:	dec01104 	addi	sp,sp,68
  8009d0:	f800283a 	ret

008009d4 <__mulsf3>:
  8009d4:	deffef04 	addi	sp,sp,-68
  8009d8:	dc400f15 	stw	r17,60(sp)
  8009dc:	dc400204 	addi	r17,sp,8
  8009e0:	dc000e15 	stw	r16,56(sp)
  8009e4:	d9000015 	stw	r4,0(sp)
  8009e8:	d9400115 	stw	r5,4(sp)
  8009ec:	d809883a 	mov	r4,sp
  8009f0:	880b883a 	mov	r5,r17
  8009f4:	dc000604 	addi	r16,sp,24
  8009f8:	dfc01015 	stw	ra,64(sp)
  8009fc:	08010b00 	call	8010b0 <__unpack_f>
  800a00:	d9000104 	addi	r4,sp,4
  800a04:	800b883a 	mov	r5,r16
  800a08:	08010b00 	call	8010b0 <__unpack_f>
  800a0c:	d9000217 	ldw	r4,8(sp)
  800a10:	00800044 	movi	r2,1
  800a14:	01400104 	movi	r5,4
  800a18:	1100142e 	bgeu	r2,r4,800a6c <__mulsf3+0x98>
  800a1c:	d8c00617 	ldw	r3,24(sp)
  800a20:	10c0052e 	bgeu	r2,r3,800a38 <__mulsf3+0x64>
  800a24:	21400f26 	beq	r4,r5,800a64 <__mulsf3+0x90>
  800a28:	19405d26 	beq	r3,r5,800ba0 <__mulsf3+0x1cc>
  800a2c:	00800084 	movi	r2,2
  800a30:	20800e26 	beq	r4,r2,800a6c <__mulsf3+0x98>
  800a34:	1880181e 	bne	r3,r2,800a98 <__mulsf3+0xc4>
  800a38:	d8c00717 	ldw	r3,28(sp)
  800a3c:	d8800317 	ldw	r2,12(sp)
  800a40:	8009883a 	mov	r4,r16
  800a44:	10c4c03a 	cmpne	r2,r2,r3
  800a48:	d8800715 	stw	r2,28(sp)
  800a4c:	0800f500 	call	800f50 <__pack_f>
  800a50:	dfc01017 	ldw	ra,64(sp)
  800a54:	dc400f17 	ldw	r17,60(sp)
  800a58:	dc000e17 	ldw	r16,56(sp)
  800a5c:	dec01104 	addi	sp,sp,68
  800a60:	f800283a 	ret
  800a64:	00800084 	movi	r2,2
  800a68:	18804f26 	beq	r3,r2,800ba8 <__mulsf3+0x1d4>
  800a6c:	d8800317 	ldw	r2,12(sp)
  800a70:	d8c00717 	ldw	r3,28(sp)
  800a74:	8809883a 	mov	r4,r17
  800a78:	10c4c03a 	cmpne	r2,r2,r3
  800a7c:	d8800315 	stw	r2,12(sp)
  800a80:	0800f500 	call	800f50 <__pack_f>
  800a84:	dfc01017 	ldw	ra,64(sp)
  800a88:	dc400f17 	ldw	r17,60(sp)
  800a8c:	dc000e17 	ldw	r16,56(sp)
  800a90:	dec01104 	addi	sp,sp,68
  800a94:	f800283a 	ret
  800a98:	d8800517 	ldw	r2,20(sp)
  800a9c:	da000917 	ldw	r8,36(sp)
  800aa0:	0013883a 	mov	r9,zero
  800aa4:	0007883a 	mov	r3,zero
  800aa8:	480f883a 	mov	r7,r9
  800aac:	180b883a 	mov	r5,r3
  800ab0:	400d883a 	mov	r6,r8
  800ab4:	1009883a 	mov	r4,r2
  800ab8:	0800e380 	call	800e38 <__muldi3>
  800abc:	da800417 	ldw	r10,16(sp)
  800ac0:	d9800817 	ldw	r6,32(sp)
  800ac4:	da400317 	ldw	r9,12(sp)
  800ac8:	52800084 	addi	r10,r10,2
  800acc:	3295883a 	add	r10,r6,r10
  800ad0:	d9800717 	ldw	r6,28(sp)
  800ad4:	180b883a 	mov	r5,r3
  800ad8:	180f883a 	mov	r7,r3
  800adc:	4992c03a 	cmpne	r9,r9,r6
  800ae0:	da400b15 	stw	r9,44(sp)
  800ae4:	1007883a 	mov	r3,r2
  800ae8:	da800c15 	stw	r10,48(sp)
  800aec:	2800070e 	bge	r5,zero,800b0c <__mulsf3+0x138>
  800af0:	2880004c 	andi	r2,r5,1
  800af4:	1005003a 	cmpeq	r2,r2,zero
  800af8:	500d883a 	mov	r6,r10
  800afc:	10001e26 	beq	r2,zero,800b78 <__mulsf3+0x1a4>
  800b00:	380ed07a 	srli	r7,r7,1
  800b04:	31800044 	addi	r6,r6,1
  800b08:	d9800c15 	stw	r6,48(sp)
  800b0c:	01100034 	movhi	r4,16384
  800b10:	213fffc4 	addi	r4,r4,-1
  800b14:	21c00b36 	bltu	r4,r7,800b44 <__mulsf3+0x170>
  800b18:	d8800c17 	ldw	r2,48(sp)
  800b1c:	00000206 	br	800b28 <__mulsf3+0x154>
  800b20:	18c7883a 	add	r3,r3,r3
  800b24:	21c00636 	bltu	r4,r7,800b40 <__mulsf3+0x16c>
  800b28:	10bfffc4 	addi	r2,r2,-1
  800b2c:	39cf883a 	add	r7,r7,r7
  800b30:	183ffb0e 	bge	r3,zero,800b20 <__mulsf3+0x14c>
  800b34:	39c00054 	ori	r7,r7,1
  800b38:	18c7883a 	add	r3,r3,r3
  800b3c:	21fffa2e 	bgeu	r4,r7,800b28 <__mulsf3+0x154>
  800b40:	d8800c15 	stw	r2,48(sp)
  800b44:	39001fcc 	andi	r4,r7,127
  800b48:	00801004 	movi	r2,64
  800b4c:	20800d26 	beq	r4,r2,800b84 <__mulsf3+0x1b0>
  800b50:	008000c4 	movi	r2,3
  800b54:	d9000a04 	addi	r4,sp,40
  800b58:	d9c00d15 	stw	r7,52(sp)
  800b5c:	d8800a15 	stw	r2,40(sp)
  800b60:	0800f500 	call	800f50 <__pack_f>
  800b64:	dfc01017 	ldw	ra,64(sp)
  800b68:	dc400f17 	ldw	r17,60(sp)
  800b6c:	dc000e17 	ldw	r16,56(sp)
  800b70:	dec01104 	addi	sp,sp,68
  800b74:	f800283a 	ret
  800b78:	1804d07a 	srli	r2,r3,1
  800b7c:	10e00034 	orhi	r3,r2,32768
  800b80:	003fdf06 	br	800b00 <__mulsf3+0x12c>
  800b84:	3880200c 	andi	r2,r7,128
  800b88:	103ff11e 	bne	r2,zero,800b50 <__mulsf3+0x17c>
  800b8c:	183ff026 	beq	r3,zero,800b50 <__mulsf3+0x17c>
  800b90:	3907883a 	add	r3,r7,r4
  800b94:	00bfe004 	movi	r2,-128
  800b98:	188e703a 	and	r7,r3,r2
  800b9c:	003fec06 	br	800b50 <__mulsf3+0x17c>
  800ba0:	00800084 	movi	r2,2
  800ba4:	20bfa41e 	bne	r4,r2,800a38 <__mulsf3+0x64>
  800ba8:	01002034 	movhi	r4,128
  800bac:	21060504 	addi	r4,r4,6164
  800bb0:	003fb306 	br	800a80 <__mulsf3+0xac>

00800bb4 <__divsf3>:
  800bb4:	defff304 	addi	sp,sp,-52
  800bb8:	dc400b15 	stw	r17,44(sp)
  800bbc:	dc400204 	addi	r17,sp,8
  800bc0:	dc000a15 	stw	r16,40(sp)
  800bc4:	d9000015 	stw	r4,0(sp)
  800bc8:	d9400115 	stw	r5,4(sp)
  800bcc:	d809883a 	mov	r4,sp
  800bd0:	880b883a 	mov	r5,r17
  800bd4:	dc000604 	addi	r16,sp,24
  800bd8:	dfc00c15 	stw	ra,48(sp)
  800bdc:	08010b00 	call	8010b0 <__unpack_f>
  800be0:	d9000104 	addi	r4,sp,4
  800be4:	800b883a 	mov	r5,r16
  800be8:	08010b00 	call	8010b0 <__unpack_f>
  800bec:	d9000217 	ldw	r4,8(sp)
  800bf0:	00800044 	movi	r2,1
  800bf4:	01800104 	movi	r6,4
  800bf8:	11000a2e 	bgeu	r2,r4,800c24 <__divsf3+0x70>
  800bfc:	d9400617 	ldw	r5,24(sp)
  800c00:	1140432e 	bgeu	r2,r5,800d10 <__divsf3+0x15c>
  800c04:	d8800317 	ldw	r2,12(sp)
  800c08:	d8c00717 	ldw	r3,28(sp)
  800c0c:	10c4f03a 	xor	r2,r2,r3
  800c10:	d8800315 	stw	r2,12(sp)
  800c14:	21800226 	beq	r4,r6,800c20 <__divsf3+0x6c>
  800c18:	00800084 	movi	r2,2
  800c1c:	2080101e 	bne	r4,r2,800c60 <__divsf3+0xac>
  800c20:	29000726 	beq	r5,r4,800c40 <__divsf3+0x8c>
  800c24:	8809883a 	mov	r4,r17
  800c28:	0800f500 	call	800f50 <__pack_f>
  800c2c:	dfc00c17 	ldw	ra,48(sp)
  800c30:	dc400b17 	ldw	r17,44(sp)
  800c34:	dc000a17 	ldw	r16,40(sp)
  800c38:	dec00d04 	addi	sp,sp,52
  800c3c:	f800283a 	ret
  800c40:	01002034 	movhi	r4,128
  800c44:	21060504 	addi	r4,r4,6164
  800c48:	0800f500 	call	800f50 <__pack_f>
  800c4c:	dfc00c17 	ldw	ra,48(sp)
  800c50:	dc400b17 	ldw	r17,44(sp)
  800c54:	dc000a17 	ldw	r16,40(sp)
  800c58:	dec00d04 	addi	sp,sp,52
  800c5c:	f800283a 	ret
  800c60:	29802d26 	beq	r5,r6,800d18 <__divsf3+0x164>
  800c64:	28801a26 	beq	r5,r2,800cd0 <__divsf3+0x11c>
  800c68:	d8c00417 	ldw	r3,16(sp)
  800c6c:	d8800817 	ldw	r2,32(sp)
  800c70:	d9000517 	ldw	r4,20(sp)
  800c74:	d9800917 	ldw	r6,36(sp)
  800c78:	1885c83a 	sub	r2,r3,r2
  800c7c:	d8800415 	stw	r2,16(sp)
  800c80:	2180032e 	bgeu	r4,r6,800c90 <__divsf3+0xdc>
  800c84:	10bfffc4 	addi	r2,r2,-1
  800c88:	d8800415 	stw	r2,16(sp)
  800c8c:	2109883a 	add	r4,r4,r4
  800c90:	01500034 	movhi	r5,16384
  800c94:	0007883a 	mov	r3,zero
  800c98:	0005883a 	mov	r2,zero
  800c9c:	01c007c4 	movi	r7,31
  800ca0:	10800044 	addi	r2,r2,1
  800ca4:	21800236 	bltu	r4,r6,800cb0 <__divsf3+0xfc>
  800ca8:	1946b03a 	or	r3,r3,r5
  800cac:	2189c83a 	sub	r4,r4,r6
  800cb0:	280ad07a 	srli	r5,r5,1
  800cb4:	2109883a 	add	r4,r4,r4
  800cb8:	11fff91e 	bne	r2,r7,800ca0 <__divsf3+0xec>
  800cbc:	19401fcc 	andi	r5,r3,127
  800cc0:	00801004 	movi	r2,64
  800cc4:	28800a26 	beq	r5,r2,800cf0 <__divsf3+0x13c>
  800cc8:	d8c00515 	stw	r3,20(sp)
  800ccc:	003fd506 	br	800c24 <__divsf3+0x70>
  800cd0:	8809883a 	mov	r4,r17
  800cd4:	d9800215 	stw	r6,8(sp)
  800cd8:	0800f500 	call	800f50 <__pack_f>
  800cdc:	dfc00c17 	ldw	ra,48(sp)
  800ce0:	dc400b17 	ldw	r17,44(sp)
  800ce4:	dc000a17 	ldw	r16,40(sp)
  800ce8:	dec00d04 	addi	sp,sp,52
  800cec:	f800283a 	ret
  800cf0:	1880200c 	andi	r2,r3,128
  800cf4:	103ff41e 	bne	r2,zero,800cc8 <__divsf3+0x114>
  800cf8:	203ff326 	beq	r4,zero,800cc8 <__divsf3+0x114>
  800cfc:	1947883a 	add	r3,r3,r5
  800d00:	00bfe004 	movi	r2,-128
  800d04:	1886703a 	and	r3,r3,r2
  800d08:	d8c00515 	stw	r3,20(sp)
  800d0c:	003fc506 	br	800c24 <__divsf3+0x70>
  800d10:	8009883a 	mov	r4,r16
  800d14:	003fc406 	br	800c28 <__divsf3+0x74>
  800d18:	8809883a 	mov	r4,r17
  800d1c:	d8000515 	stw	zero,20(sp)
  800d20:	d8000415 	stw	zero,16(sp)
  800d24:	003fc006 	br	800c28 <__divsf3+0x74>

00800d28 <__nesf2>:
  800d28:	defff304 	addi	sp,sp,-52
  800d2c:	dc400b15 	stw	r17,44(sp)
  800d30:	dc400204 	addi	r17,sp,8
  800d34:	dc000a15 	stw	r16,40(sp)
  800d38:	d9000015 	stw	r4,0(sp)
  800d3c:	d9400115 	stw	r5,4(sp)
  800d40:	d809883a 	mov	r4,sp
  800d44:	880b883a 	mov	r5,r17
  800d48:	dc000604 	addi	r16,sp,24
  800d4c:	dfc00c15 	stw	ra,48(sp)
  800d50:	08010b00 	call	8010b0 <__unpack_f>
  800d54:	d9000104 	addi	r4,sp,4
  800d58:	800b883a 	mov	r5,r16
  800d5c:	08010b00 	call	8010b0 <__unpack_f>
  800d60:	d8800217 	ldw	r2,8(sp)
  800d64:	00c00044 	movi	r3,1
  800d68:	180d883a 	mov	r6,r3
  800d6c:	1880062e 	bgeu	r3,r2,800d88 <__nesf2+0x60>
  800d70:	d8800617 	ldw	r2,24(sp)
  800d74:	8809883a 	mov	r4,r17
  800d78:	800b883a 	mov	r5,r16
  800d7c:	1880022e 	bgeu	r3,r2,800d88 <__nesf2+0x60>
  800d80:	08011780 	call	801178 <__fpcmp_parts_f>
  800d84:	100d883a 	mov	r6,r2
  800d88:	3005883a 	mov	r2,r6
  800d8c:	dfc00c17 	ldw	ra,48(sp)
  800d90:	dc400b17 	ldw	r17,44(sp)
  800d94:	dc000a17 	ldw	r16,40(sp)
  800d98:	dec00d04 	addi	sp,sp,52
  800d9c:	f800283a 	ret

00800da0 <__floatsisf>:
  800da0:	2006d7fa 	srli	r3,r4,31
  800da4:	defffa04 	addi	sp,sp,-24
  800da8:	008000c4 	movi	r2,3
  800dac:	dfc00515 	stw	ra,20(sp)
  800db0:	dc000415 	stw	r16,16(sp)
  800db4:	d8800015 	stw	r2,0(sp)
  800db8:	d8c00115 	stw	r3,4(sp)
  800dbc:	2000081e 	bne	r4,zero,800de0 <__floatsisf+0x40>
  800dc0:	00800084 	movi	r2,2
  800dc4:	d8800015 	stw	r2,0(sp)
  800dc8:	d809883a 	mov	r4,sp
  800dcc:	0800f500 	call	800f50 <__pack_f>
  800dd0:	dfc00517 	ldw	ra,20(sp)
  800dd4:	dc000417 	ldw	r16,16(sp)
  800dd8:	dec00604 	addi	sp,sp,24
  800ddc:	f800283a 	ret
  800de0:	00800784 	movi	r2,30
  800de4:	1807003a 	cmpeq	r3,r3,zero
  800de8:	d8800215 	stw	r2,8(sp)
  800dec:	18000e1e 	bne	r3,zero,800e28 <__floatsisf+0x88>
  800df0:	00a00034 	movhi	r2,32768
  800df4:	20800e26 	beq	r4,r2,800e30 <__floatsisf+0x90>
  800df8:	0121c83a 	sub	r16,zero,r4
  800dfc:	8009883a 	mov	r4,r16
  800e00:	dc000315 	stw	r16,12(sp)
  800e04:	0800ed00 	call	800ed0 <__clzsi2>
  800e08:	117fffc4 	addi	r5,r2,-1
  800e0c:	017fee0e 	bge	zero,r5,800dc8 <__floatsisf+0x28>
  800e10:	d8800217 	ldw	r2,8(sp)
  800e14:	8146983a 	sll	r3,r16,r5
  800e18:	1145c83a 	sub	r2,r2,r5
  800e1c:	d8c00315 	stw	r3,12(sp)
  800e20:	d8800215 	stw	r2,8(sp)
  800e24:	003fe806 	br	800dc8 <__floatsisf+0x28>
  800e28:	2021883a 	mov	r16,r4
  800e2c:	003ff306 	br	800dfc <__floatsisf+0x5c>
  800e30:	00b3c034 	movhi	r2,52992
  800e34:	003fe606 	br	800dd0 <__floatsisf+0x30>

00800e38 <__muldi3>:
  800e38:	2011883a 	mov	r8,r4
  800e3c:	427fffcc 	andi	r9,r8,65535
  800e40:	4018d43a 	srli	r12,r8,16
  800e44:	32bfffcc 	andi	r10,r6,65535
  800e48:	3016d43a 	srli	r11,r6,16
  800e4c:	4a85383a 	mul	r2,r9,r10
  800e50:	6295383a 	mul	r10,r12,r10
  800e54:	4ad3383a 	mul	r9,r9,r11
  800e58:	113fffcc 	andi	r4,r2,65535
  800e5c:	1004d43a 	srli	r2,r2,16
  800e60:	4a93883a 	add	r9,r9,r10
  800e64:	3807883a 	mov	r3,r7
  800e68:	1245883a 	add	r2,r2,r9
  800e6c:	280f883a 	mov	r7,r5
  800e70:	180b883a 	mov	r5,r3
  800e74:	1006943a 	slli	r3,r2,16
  800e78:	defffd04 	addi	sp,sp,-12
  800e7c:	dc800215 	stw	r18,8(sp)
  800e80:	1907883a 	add	r3,r3,r4
  800e84:	dc400115 	stw	r17,4(sp)
  800e88:	dc000015 	stw	r16,0(sp)
  800e8c:	4165383a 	mul	r18,r8,r5
  800e90:	31e3383a 	mul	r17,r6,r7
  800e94:	1012d43a 	srli	r9,r2,16
  800e98:	62d9383a 	mul	r12,r12,r11
  800e9c:	181f883a 	mov	r15,r3
  800ea0:	1280022e 	bgeu	r2,r10,800eac <__muldi3+0x74>
  800ea4:	00800074 	movhi	r2,1
  800ea8:	6099883a 	add	r12,r12,r2
  800eac:	624d883a 	add	r6,r12,r9
  800eb0:	9187883a 	add	r3,r18,r6
  800eb4:	88c7883a 	add	r3,r17,r3
  800eb8:	7805883a 	mov	r2,r15
  800ebc:	dc800217 	ldw	r18,8(sp)
  800ec0:	dc400117 	ldw	r17,4(sp)
  800ec4:	dc000017 	ldw	r16,0(sp)
  800ec8:	dec00304 	addi	sp,sp,12
  800ecc:	f800283a 	ret

00800ed0 <__clzsi2>:
  800ed0:	00bfffd4 	movui	r2,65535
  800ed4:	11000e36 	bltu	r2,r4,800f10 <__clzsi2+0x40>
  800ed8:	00803fc4 	movi	r2,255
  800edc:	01400204 	movi	r5,8
  800ee0:	0007883a 	mov	r3,zero
  800ee4:	11001036 	bltu	r2,r4,800f28 <__clzsi2+0x58>
  800ee8:	000b883a 	mov	r5,zero
  800eec:	20c6d83a 	srl	r3,r4,r3
  800ef0:	00802034 	movhi	r2,128
  800ef4:	10860904 	addi	r2,r2,6180
  800ef8:	1887883a 	add	r3,r3,r2
  800efc:	18800003 	ldbu	r2,0(r3)
  800f00:	00c00804 	movi	r3,32
  800f04:	2885883a 	add	r2,r5,r2
  800f08:	1885c83a 	sub	r2,r3,r2
  800f0c:	f800283a 	ret
  800f10:	01400404 	movi	r5,16
  800f14:	00804034 	movhi	r2,256
  800f18:	10bfffc4 	addi	r2,r2,-1
  800f1c:	2807883a 	mov	r3,r5
  800f20:	113ff22e 	bgeu	r2,r4,800eec <__clzsi2+0x1c>
  800f24:	01400604 	movi	r5,24
  800f28:	2807883a 	mov	r3,r5
  800f2c:	20c6d83a 	srl	r3,r4,r3
  800f30:	00802034 	movhi	r2,128
  800f34:	10860904 	addi	r2,r2,6180
  800f38:	1887883a 	add	r3,r3,r2
  800f3c:	18800003 	ldbu	r2,0(r3)
  800f40:	00c00804 	movi	r3,32
  800f44:	2885883a 	add	r2,r5,r2
  800f48:	1885c83a 	sub	r2,r3,r2
  800f4c:	f800283a 	ret

00800f50 <__pack_f>:
  800f50:	20c00017 	ldw	r3,0(r4)
  800f54:	01c00044 	movi	r7,1
  800f58:	21800317 	ldw	r6,12(r4)
  800f5c:	21400117 	ldw	r5,4(r4)
  800f60:	38c02d2e 	bgeu	r7,r3,801018 <__pack_f+0xc8>
  800f64:	00800104 	movi	r2,4
  800f68:	18802826 	beq	r3,r2,80100c <__pack_f+0xbc>
  800f6c:	00800084 	movi	r2,2
  800f70:	18800126 	beq	r3,r2,800f78 <__pack_f+0x28>
  800f74:	3000101e 	bne	r6,zero,800fb8 <__pack_f+0x68>
  800f78:	000d883a 	mov	r6,zero
  800f7c:	0007883a 	mov	r3,zero
  800f80:	19003fcc 	andi	r4,r3,255
  800f84:	200895fa 	slli	r4,r4,23
  800f88:	00c02034 	movhi	r3,128
  800f8c:	18ffffc4 	addi	r3,r3,-1
  800f90:	30c6703a 	and	r3,r6,r3
  800f94:	10a0002c 	andhi	r2,r2,32768
  800f98:	10c4b03a 	or	r2,r2,r3
  800f9c:	280a97fa 	slli	r5,r5,31
  800fa0:	1104b03a 	or	r2,r2,r4
  800fa4:	00e00034 	movhi	r3,32768
  800fa8:	18ffffc4 	addi	r3,r3,-1
  800fac:	10c4703a 	and	r2,r2,r3
  800fb0:	1144b03a 	or	r2,r2,r5
  800fb4:	f800283a 	ret
  800fb8:	21000217 	ldw	r4,8(r4)
  800fbc:	00bfe084 	movi	r2,-126
  800fc0:	20801b16 	blt	r4,r2,801030 <__pack_f+0xe0>
  800fc4:	00801fc4 	movi	r2,127
  800fc8:	11001016 	blt	r2,r4,80100c <__pack_f+0xbc>
  800fcc:	308e703a 	and	r7,r6,r2
  800fd0:	2087883a 	add	r3,r4,r2
  800fd4:	00801004 	movi	r2,64
  800fd8:	38800526 	beq	r7,r2,800ff0 <__pack_f+0xa0>
  800fdc:	31800fc4 	addi	r6,r6,63
  800fe0:	30000716 	blt	r6,zero,801000 <__pack_f+0xb0>
  800fe4:	300490ba 	slli	r2,r6,2
  800fe8:	100cd27a 	srli	r6,r2,9
  800fec:	003fe406 	br	800f80 <__pack_f+0x30>
  800ff0:	3080200c 	andi	r2,r6,128
  800ff4:	103ffa26 	beq	r2,zero,800fe0 <__pack_f+0x90>
  800ff8:	31cd883a 	add	r6,r6,r7
  800ffc:	003ff806 	br	800fe0 <__pack_f+0x90>
  801000:	300cd07a 	srli	r6,r6,1
  801004:	18c00044 	addi	r3,r3,1
  801008:	003ff606 	br	800fe4 <__pack_f+0x94>
  80100c:	000d883a 	mov	r6,zero
  801010:	00ffffc4 	movi	r3,-1
  801014:	003fda06 	br	800f80 <__pack_f+0x30>
  801018:	31800434 	orhi	r6,r6,16
  80101c:	00802034 	movhi	r2,128
  801020:	10bfffc4 	addi	r2,r2,-1
  801024:	308c703a 	and	r6,r6,r2
  801028:	00ffffc4 	movi	r3,-1
  80102c:	003fd406 	br	800f80 <__pack_f+0x30>
  801030:	1109c83a 	sub	r4,r2,r4
  801034:	00800644 	movi	r2,25
  801038:	11001216 	blt	r2,r4,801084 <__pack_f+0x134>
  80103c:	3904983a 	sll	r2,r7,r4
  801040:	3106d83a 	srl	r3,r6,r4
  801044:	10bfffc4 	addi	r2,r2,-1
  801048:	3084703a 	and	r2,r6,r2
  80104c:	1004c03a 	cmpne	r2,r2,zero
  801050:	1886b03a 	or	r3,r3,r2
  801054:	19001fcc 	andi	r4,r3,127
  801058:	00801004 	movi	r2,64
  80105c:	20800c26 	beq	r4,r2,801090 <__pack_f+0x140>
  801060:	18c00fc4 	addi	r3,r3,63
  801064:	00900034 	movhi	r2,16384
  801068:	10bfffc4 	addi	r2,r2,-1
  80106c:	180cd1fa 	srli	r6,r3,7
  801070:	10c7803a 	cmpltu	r3,r2,r3
  801074:	00802034 	movhi	r2,128
  801078:	10bfffc4 	addi	r2,r2,-1
  80107c:	308c703a 	and	r6,r6,r2
  801080:	003fbf06 	br	800f80 <__pack_f+0x30>
  801084:	0007883a 	mov	r3,zero
  801088:	000d883a 	mov	r6,zero
  80108c:	003ff906 	br	801074 <__pack_f+0x124>
  801090:	1880200c 	andi	r2,r3,128
  801094:	10000126 	beq	r2,zero,80109c <__pack_f+0x14c>
  801098:	1907883a 	add	r3,r3,r4
  80109c:	180cd1fa 	srli	r6,r3,7
  8010a0:	00900034 	movhi	r2,16384
  8010a4:	10bfffc4 	addi	r2,r2,-1
  8010a8:	10c7803a 	cmpltu	r3,r2,r3
  8010ac:	003ff106 	br	801074 <__pack_f+0x124>

008010b0 <__unpack_f>:
  8010b0:	21800017 	ldw	r6,0(r4)
  8010b4:	00c02034 	movhi	r3,128
  8010b8:	18ffffc4 	addi	r3,r3,-1
  8010bc:	3004d5fa 	srli	r2,r6,23
  8010c0:	3008d7fa 	srli	r4,r6,31
  8010c4:	30ce703a 	and	r7,r6,r3
  8010c8:	10c03fcc 	andi	r3,r2,255
  8010cc:	29000115 	stw	r4,4(r5)
  8010d0:	1800131e 	bne	r3,zero,801120 <__unpack_f+0x70>
  8010d4:	38000f26 	beq	r7,zero,801114 <__unpack_f+0x64>
  8010d8:	380691fa 	slli	r3,r7,7
  8010dc:	01bfe084 	movi	r6,-126
  8010e0:	008000c4 	movi	r2,3
  8010e4:	01100034 	movhi	r4,16384
  8010e8:	213fffc4 	addi	r4,r4,-1
  8010ec:	28800015 	stw	r2,0(r5)
  8010f0:	29800215 	stw	r6,8(r5)
  8010f4:	20c00536 	bltu	r4,r3,80110c <__unpack_f+0x5c>
  8010f8:	3005883a 	mov	r2,r6
  8010fc:	18c7883a 	add	r3,r3,r3
  801100:	10bfffc4 	addi	r2,r2,-1
  801104:	20fffd2e 	bgeu	r4,r3,8010fc <__unpack_f+0x4c>
  801108:	28800215 	stw	r2,8(r5)
  80110c:	28c00315 	stw	r3,12(r5)
  801110:	f800283a 	ret
  801114:	00800084 	movi	r2,2
  801118:	28800015 	stw	r2,0(r5)
  80111c:	f800283a 	ret
  801120:	00803fc4 	movi	r2,255
  801124:	18800826 	beq	r3,r2,801148 <__unpack_f+0x98>
  801128:	380491fa 	slli	r2,r7,7
  80112c:	18ffe044 	addi	r3,r3,-127
  801130:	28c00215 	stw	r3,8(r5)
  801134:	10900034 	orhi	r2,r2,16384
  801138:	28800315 	stw	r2,12(r5)
  80113c:	008000c4 	movi	r2,3
  801140:	28800015 	stw	r2,0(r5)
  801144:	f800283a 	ret
  801148:	3800031e 	bne	r7,zero,801158 <__unpack_f+0xa8>
  80114c:	00800104 	movi	r2,4
  801150:	28800015 	stw	r2,0(r5)
  801154:	f800283a 	ret
  801158:	3080042c 	andhi	r2,r6,16
  80115c:	10000426 	beq	r2,zero,801170 <__unpack_f+0xc0>
  801160:	00800044 	movi	r2,1
  801164:	28800015 	stw	r2,0(r5)
  801168:	29c00315 	stw	r7,12(r5)
  80116c:	f800283a 	ret
  801170:	28000015 	stw	zero,0(r5)
  801174:	003ffc06 	br	801168 <__unpack_f+0xb8>

00801178 <__fpcmp_parts_f>:
  801178:	21800017 	ldw	r6,0(r4)
  80117c:	00c00044 	movi	r3,1
  801180:	19800a2e 	bgeu	r3,r6,8011ac <__fpcmp_parts_f+0x34>
  801184:	28800017 	ldw	r2,0(r5)
  801188:	1880082e 	bgeu	r3,r2,8011ac <__fpcmp_parts_f+0x34>
  80118c:	00c00104 	movi	r3,4
  801190:	30c01e26 	beq	r6,r3,80120c <__fpcmp_parts_f+0x94>
  801194:	10c01a26 	beq	r2,r3,801200 <__fpcmp_parts_f+0x88>
  801198:	00c00084 	movi	r3,2
  80119c:	30c00526 	beq	r6,r3,8011b4 <__fpcmp_parts_f+0x3c>
  8011a0:	10c0071e 	bne	r2,r3,8011c0 <__fpcmp_parts_f+0x48>
  8011a4:	20800117 	ldw	r2,4(r4)
  8011a8:	1000091e 	bne	r2,zero,8011d0 <__fpcmp_parts_f+0x58>
  8011ac:	00800044 	movi	r2,1
  8011b0:	f800283a 	ret
  8011b4:	10c0121e 	bne	r2,r3,801200 <__fpcmp_parts_f+0x88>
  8011b8:	0005883a 	mov	r2,zero
  8011bc:	f800283a 	ret
  8011c0:	20c00117 	ldw	r3,4(r4)
  8011c4:	28800117 	ldw	r2,4(r5)
  8011c8:	18800326 	beq	r3,r2,8011d8 <__fpcmp_parts_f+0x60>
  8011cc:	183ff726 	beq	r3,zero,8011ac <__fpcmp_parts_f+0x34>
  8011d0:	00bfffc4 	movi	r2,-1
  8011d4:	f800283a 	ret
  8011d8:	21800217 	ldw	r6,8(r4)
  8011dc:	28800217 	ldw	r2,8(r5)
  8011e0:	11bffa16 	blt	r2,r6,8011cc <__fpcmp_parts_f+0x54>
  8011e4:	30800416 	blt	r6,r2,8011f8 <__fpcmp_parts_f+0x80>
  8011e8:	21000317 	ldw	r4,12(r4)
  8011ec:	29400317 	ldw	r5,12(r5)
  8011f0:	293ff636 	bltu	r5,r4,8011cc <__fpcmp_parts_f+0x54>
  8011f4:	217ff02e 	bgeu	r4,r5,8011b8 <__fpcmp_parts_f+0x40>
  8011f8:	183fec1e 	bne	r3,zero,8011ac <__fpcmp_parts_f+0x34>
  8011fc:	003ff406 	br	8011d0 <__fpcmp_parts_f+0x58>
  801200:	28800117 	ldw	r2,4(r5)
  801204:	103fe91e 	bne	r2,zero,8011ac <__fpcmp_parts_f+0x34>
  801208:	003ff106 	br	8011d0 <__fpcmp_parts_f+0x58>
  80120c:	11bfe51e 	bne	r2,r6,8011a4 <__fpcmp_parts_f+0x2c>
  801210:	28c00117 	ldw	r3,4(r5)
  801214:	20800117 	ldw	r2,4(r4)
  801218:	1885c83a 	sub	r2,r3,r2
  80121c:	f800283a 	ret

00801220 <memset>:
  801220:	30000526 	beq	r6,zero,801238 <memset+0x18>
  801224:	310d883a 	add	r6,r6,r4
  801228:	2005883a 	mov	r2,r4
  80122c:	11400005 	stb	r5,0(r2)
  801230:	10800044 	addi	r2,r2,1
  801234:	11bffd1e 	bne	r2,r6,80122c <memset+0xc>
  801238:	2005883a 	mov	r2,r4
  80123c:	f800283a 	ret

00801240 <alt_dcache_flush>:
  801240:	2145883a 	add	r2,r4,r5
  801244:	2007883a 	mov	r3,r4
  801248:	2080032e 	bgeu	r4,r2,801258 <alt_dcache_flush+0x18>
  80124c:	1800001b 	flushda	0(r3)
  801250:	18c00804 	addi	r3,r3,32
  801254:	18bffd36 	bltu	r3,r2,80124c <alt_dcache_flush+0xc>
  801258:	208007cc 	andi	r2,r4,31
  80125c:	10000126 	beq	r2,zero,801264 <alt_dcache_flush+0x24>
  801260:	1800001b 	flushda	0(r3)
  801264:	f800283a 	ret

00801268 <alt_ic_irq_enabled>:
  801268:	000530fa 	rdctl	r2,ienable
  80126c:	00c00044 	movi	r3,1
  801270:	1946983a 	sll	r3,r3,r5
  801274:	10c4703a 	and	r2,r2,r3
  801278:	1004c03a 	cmpne	r2,r2,zero
  80127c:	f800283a 	ret

00801280 <alt_ic_irq_enable>:
  801280:	000d303a 	rdctl	r6,status
  801284:	00bfff84 	movi	r2,-2
  801288:	3084703a 	and	r2,r6,r2
  80128c:	1001703a 	wrctl	status,r2
  801290:	01002034 	movhi	r4,128
  801294:	21074e04 	addi	r4,r4,7480
  801298:	00800044 	movi	r2,1
  80129c:	20c00017 	ldw	r3,0(r4)
  8012a0:	1144983a 	sll	r2,r2,r5
  8012a4:	10c4b03a 	or	r2,r2,r3
  8012a8:	20800015 	stw	r2,0(r4)
  8012ac:	20c00017 	ldw	r3,0(r4)
  8012b0:	180170fa 	wrctl	ienable,r3
  8012b4:	3001703a 	wrctl	status,r6
  8012b8:	0005883a 	mov	r2,zero
  8012bc:	f800283a 	ret

008012c0 <alt_ic_irq_disable>:
  8012c0:	000d303a 	rdctl	r6,status
  8012c4:	00bfff84 	movi	r2,-2
  8012c8:	3084703a 	and	r2,r6,r2
  8012cc:	1001703a 	wrctl	status,r2
  8012d0:	01002034 	movhi	r4,128
  8012d4:	21074e04 	addi	r4,r4,7480
  8012d8:	00bfff84 	movi	r2,-2
  8012dc:	20c00017 	ldw	r3,0(r4)
  8012e0:	1144183a 	rol	r2,r2,r5
  8012e4:	10c4703a 	and	r2,r2,r3
  8012e8:	20800015 	stw	r2,0(r4)
  8012ec:	20c00017 	ldw	r3,0(r4)
  8012f0:	180170fa 	wrctl	ienable,r3
  8012f4:	3001703a 	wrctl	status,r6
  8012f8:	0005883a 	mov	r2,zero
  8012fc:	f800283a 	ret

00801300 <alt_ic_isr_register>:
  801300:	08013041 	jmpi	801304 <alt_iic_isr_register>

00801304 <alt_iic_isr_register>:
  801304:	defffe04 	addi	sp,sp,-8
  801308:	008007c4 	movi	r2,31
  80130c:	dfc00115 	stw	ra,4(sp)
  801310:	dc000015 	stw	r16,0(sp)
  801314:	023ffa84 	movi	r8,-22
  801318:	1140050e 	bge	r2,r5,801330 <alt_iic_isr_register+0x2c>
  80131c:	4005883a 	mov	r2,r8
  801320:	dfc00117 	ldw	ra,4(sp)
  801324:	dc000017 	ldw	r16,0(sp)
  801328:	dec00204 	addi	sp,sp,8
  80132c:	f800283a 	ret
  801330:	0021303a 	rdctl	r16,status
  801334:	00bfff84 	movi	r2,-2
  801338:	8084703a 	and	r2,r16,r2
  80133c:	1001703a 	wrctl	status,r2
  801340:	280690fa 	slli	r3,r5,3
  801344:	00802034 	movhi	r2,128
  801348:	10875204 	addi	r2,r2,7496
  80134c:	1887883a 	add	r3,r3,r2
  801350:	19c00115 	stw	r7,4(r3)
  801354:	19800015 	stw	r6,0(r3)
  801358:	30000826 	beq	r6,zero,80137c <alt_iic_isr_register+0x78>
  80135c:	08012800 	call	801280 <alt_ic_irq_enable>
  801360:	1011883a 	mov	r8,r2
  801364:	8001703a 	wrctl	status,r16
  801368:	4005883a 	mov	r2,r8
  80136c:	dfc00117 	ldw	ra,4(sp)
  801370:	dc000017 	ldw	r16,0(sp)
  801374:	dec00204 	addi	sp,sp,8
  801378:	f800283a 	ret
  80137c:	08012c00 	call	8012c0 <alt_ic_irq_disable>
  801380:	1011883a 	mov	r8,r2
  801384:	8001703a 	wrctl	status,r16
  801388:	003ff706 	br	801368 <alt_iic_isr_register+0x64>

0080138c <alt_load>:
  80138c:	deffff04 	addi	sp,sp,-4
  801390:	01002034 	movhi	r4,128
  801394:	2106ce04 	addi	r4,r4,6968
  801398:	00c02034 	movhi	r3,128
  80139c:	18c65004 	addi	r3,r3,6464
  8013a0:	dfc00015 	stw	ra,0(sp)
  8013a4:	20c00826 	beq	r4,r3,8013c8 <alt_load+0x3c>
  8013a8:	01402034 	movhi	r5,128
  8013ac:	2946ce04 	addi	r5,r5,6968
  8013b0:	19400526 	beq	r3,r5,8013c8 <alt_load+0x3c>
  8013b4:	20800017 	ldw	r2,0(r4)
  8013b8:	21000104 	addi	r4,r4,4
  8013bc:	18800015 	stw	r2,0(r3)
  8013c0:	18c00104 	addi	r3,r3,4
  8013c4:	28fffb1e 	bne	r5,r3,8013b4 <alt_load+0x28>
  8013c8:	01002034 	movhi	r4,128
  8013cc:	21000804 	addi	r4,r4,32
  8013d0:	00c02034 	movhi	r3,128
  8013d4:	18c00804 	addi	r3,r3,32
  8013d8:	20c00826 	beq	r4,r3,8013fc <alt_load+0x70>
  8013dc:	01402034 	movhi	r5,128
  8013e0:	29406104 	addi	r5,r5,388
  8013e4:	19400526 	beq	r3,r5,8013fc <alt_load+0x70>
  8013e8:	20800017 	ldw	r2,0(r4)
  8013ec:	21000104 	addi	r4,r4,4
  8013f0:	18800015 	stw	r2,0(r3)
  8013f4:	18c00104 	addi	r3,r3,4
  8013f8:	28fffb1e 	bne	r5,r3,8013e8 <alt_load+0x5c>
  8013fc:	01002034 	movhi	r4,128
  801400:	21060504 	addi	r4,r4,6164
  801404:	00c02034 	movhi	r3,128
  801408:	18c60504 	addi	r3,r3,6164
  80140c:	20c00826 	beq	r4,r3,801430 <alt_load+0xa4>
  801410:	01402034 	movhi	r5,128
  801414:	29465004 	addi	r5,r5,6464
  801418:	19400526 	beq	r3,r5,801430 <alt_load+0xa4>
  80141c:	20800017 	ldw	r2,0(r4)
  801420:	21000104 	addi	r4,r4,4
  801424:	18800015 	stw	r2,0(r3)
  801428:	18c00104 	addi	r3,r3,4
  80142c:	28fffb1e 	bne	r5,r3,80141c <alt_load+0x90>
  801430:	08016100 	call	801610 <alt_dcache_flush_all>
  801434:	dfc00017 	ldw	ra,0(sp)
  801438:	dec00104 	addi	sp,sp,4
  80143c:	08016ac1 	jmpi	8016ac <alt_icache_flush_all>

00801440 <alt_sys_init>:
  801440:	deffff04 	addi	sp,sp,-4
  801444:	01004034 	movhi	r4,256
  801448:	21040004 	addi	r4,r4,4096
  80144c:	000b883a 	mov	r5,zero
  801450:	01800404 	movi	r6,16
  801454:	01c0fa04 	movi	r7,1000
  801458:	dfc00015 	stw	ra,0(sp)
  80145c:	08015840 	call	801584 <alt_avalon_timer_sc_init>
  801460:	01002034 	movhi	r4,128
  801464:	21065004 	addi	r4,r4,6464
  801468:	01402034 	movhi	r5,128
  80146c:	2946c804 	addi	r5,r5,6944
  801470:	dfc00017 	ldw	ra,0(sp)
  801474:	dec00104 	addi	sp,sp,4
  801478:	08016301 	jmpi	801630 <alt_dev_llist_insert>

0080147c <alt_irq_init>:
  80147c:	deffff04 	addi	sp,sp,-4
  801480:	dfc00015 	stw	ra,0(sp)
  801484:	08017d40 	call	8017d4 <altera_nios2_qsys_irq_init>
  801488:	00800044 	movi	r2,1
  80148c:	1001703a 	wrctl	status,r2
  801490:	dfc00017 	ldw	ra,0(sp)
  801494:	dec00104 	addi	sp,sp,4
  801498:	f800283a 	ret

0080149c <altera_avalon_jtag_uart_write_fd>:
  80149c:	20800017 	ldw	r2,0(r4)
  8014a0:	21c00217 	ldw	r7,8(r4)
  8014a4:	11000a04 	addi	r4,r2,40
  8014a8:	08015481 	jmpi	801548 <altera_avalon_jtag_uart_write>

008014ac <altera_avalon_jtag_uart_read_fd>:
  8014ac:	20800017 	ldw	r2,0(r4)
  8014b0:	21c00217 	ldw	r7,8(r4)
  8014b4:	11000a04 	addi	r4,r2,40
  8014b8:	08014bc1 	jmpi	8014bc <altera_avalon_jtag_uart_read>

008014bc <altera_avalon_jtag_uart_read>:
  8014bc:	2991883a 	add	r8,r5,r6
  8014c0:	21000017 	ldw	r4,0(r4)
  8014c4:	2a00102e 	bgeu	r5,r8,801508 <altera_avalon_jtag_uart_read+0x4c>
  8014c8:	39d0000c 	andi	r7,r7,16384
  8014cc:	3800141e 	bne	r7,zero,801520 <altera_avalon_jtag_uart_read+0x64>
  8014d0:	2807883a 	mov	r3,r5
  8014d4:	21800037 	ldwio	r6,0(r4)
  8014d8:	30a0000c 	andi	r2,r6,32768
  8014dc:	1000061e 	bne	r2,zero,8014f8 <altera_avalon_jtag_uart_read+0x3c>
  8014e0:	28c0031e 	bne	r5,r3,8014f0 <altera_avalon_jtag_uart_read+0x34>
  8014e4:	2807883a 	mov	r3,r5
  8014e8:	1a3ffa36 	bltu	r3,r8,8014d4 <altera_avalon_jtag_uart_read+0x18>
  8014ec:	28c00726 	beq	r5,r3,80150c <altera_avalon_jtag_uart_read+0x50>
  8014f0:	1945c83a 	sub	r2,r3,r5
  8014f4:	f800283a 	ret
  8014f8:	19800005 	stb	r6,0(r3)
  8014fc:	18c00044 	addi	r3,r3,1
  801500:	1a3ff436 	bltu	r3,r8,8014d4 <altera_avalon_jtag_uart_read+0x18>
  801504:	003ff906 	br	8014ec <altera_avalon_jtag_uart_read+0x30>
  801508:	39d0000c 	andi	r7,r7,16384
  80150c:	38000226 	beq	r7,zero,801518 <altera_avalon_jtag_uart_read+0x5c>
  801510:	00bffd44 	movi	r2,-11
  801514:	f800283a 	ret
  801518:	00bffec4 	movi	r2,-5
  80151c:	f800283a 	ret
  801520:	2807883a 	mov	r3,r5
  801524:	21800037 	ldwio	r6,0(r4)
  801528:	30a0000c 	andi	r2,r6,32768
  80152c:	10000426 	beq	r2,zero,801540 <altera_avalon_jtag_uart_read+0x84>
  801530:	19800005 	stb	r6,0(r3)
  801534:	18c00044 	addi	r3,r3,1
  801538:	1a3ffa1e 	bne	r3,r8,801524 <altera_avalon_jtag_uart_read+0x68>
  80153c:	003feb06 	br	8014ec <altera_avalon_jtag_uart_read+0x30>
  801540:	28fff326 	beq	r5,r3,801510 <altera_avalon_jtag_uart_read+0x54>
  801544:	003fea06 	br	8014f0 <altera_avalon_jtag_uart_read+0x34>

00801548 <altera_avalon_jtag_uart_write>:
  801548:	314f883a 	add	r7,r6,r5
  80154c:	21000017 	ldw	r4,0(r4)
  801550:	29c0052e 	bgeu	r5,r7,801568 <altera_avalon_jtag_uart_write+0x20>
  801554:	20c00104 	addi	r3,r4,4
  801558:	18800037 	ldwio	r2,0(r3)
  80155c:	10bfffec 	andhi	r2,r2,65535
  801560:	1000031e 	bne	r2,zero,801570 <altera_avalon_jtag_uart_write+0x28>
  801564:	29fffc36 	bltu	r5,r7,801558 <altera_avalon_jtag_uart_write+0x10>
  801568:	3005883a 	mov	r2,r6
  80156c:	f800283a 	ret
  801570:	28800007 	ldb	r2,0(r5)
  801574:	29400044 	addi	r5,r5,1
  801578:	20800035 	stwio	r2,0(r4)
  80157c:	29fff636 	bltu	r5,r7,801558 <altera_avalon_jtag_uart_write+0x10>
  801580:	003ff906 	br	801568 <altera_avalon_jtag_uart_write+0x20>

00801584 <alt_avalon_timer_sc_init>:
  801584:	02002034 	movhi	r8,128
  801588:	42074f04 	addi	r8,r8,7484
  80158c:	40800017 	ldw	r2,0(r8)
  801590:	defffe04 	addi	sp,sp,-8
  801594:	3807883a 	mov	r3,r7
  801598:	dfc00115 	stw	ra,4(sp)
  80159c:	200f883a 	mov	r7,r4
  8015a0:	1000011e 	bne	r2,zero,8015a8 <alt_avalon_timer_sc_init+0x24>
  8015a4:	40c00015 	stw	r3,0(r8)
  8015a8:	008001c4 	movi	r2,7
  8015ac:	38800135 	stwio	r2,4(r7)
  8015b0:	2809883a 	mov	r4,r5
  8015b4:	300b883a 	mov	r5,r6
  8015b8:	01802034 	movhi	r6,128
  8015bc:	31857504 	addi	r6,r6,5588
  8015c0:	d8000015 	stw	zero,0(sp)
  8015c4:	08013000 	call	801300 <alt_ic_isr_register>
  8015c8:	dfc00117 	ldw	ra,4(sp)
  8015cc:	dec00204 	addi	sp,sp,8
  8015d0:	f800283a 	ret

008015d4 <alt_avalon_timer_sc_irq>:
  8015d4:	defffe04 	addi	sp,sp,-8
  8015d8:	dfc00115 	stw	ra,4(sp)
  8015dc:	dc000015 	stw	r16,0(sp)
  8015e0:	20000035 	stwio	zero,0(r4)
  8015e4:	20800137 	ldwio	r2,4(r4)
  8015e8:	0021303a 	rdctl	r16,status
  8015ec:	00bfff84 	movi	r2,-2
  8015f0:	8084703a 	and	r2,r16,r2
  8015f4:	1001703a 	wrctl	status,r2
  8015f8:	08016ec0 	call	8016ec <alt_tick>
  8015fc:	8001703a 	wrctl	status,r16
  801600:	dfc00117 	ldw	ra,4(sp)
  801604:	dc000017 	ldw	r16,0(sp)
  801608:	dec00204 	addi	sp,sp,8
  80160c:	f800283a 	ret

00801610 <alt_dcache_flush_all>:
  801610:	0005883a 	mov	r2,zero
  801614:	00c20004 	movi	r3,2048
  801618:	1000003b 	flushd	0(r2)
  80161c:	10800804 	addi	r2,r2,32
  801620:	10fffd1e 	bne	r2,r3,801618 <alt_dcache_flush_all+0x8>
  801624:	f800283a 	ret

00801628 <alt_dev_null_write>:
  801628:	3005883a 	mov	r2,r6
  80162c:	f800283a 	ret

00801630 <alt_dev_llist_insert>:
  801630:	deffff04 	addi	sp,sp,-4
  801634:	dfc00015 	stw	ra,0(sp)
  801638:	20000d26 	beq	r4,zero,801670 <alt_dev_llist_insert+0x40>
  80163c:	20800217 	ldw	r2,8(r4)
  801640:	000d883a 	mov	r6,zero
  801644:	10000a26 	beq	r2,zero,801670 <alt_dev_llist_insert+0x40>
  801648:	28c00017 	ldw	r3,0(r5)
  80164c:	21400115 	stw	r5,4(r4)
  801650:	20c00015 	stw	r3,0(r4)
  801654:	28800017 	ldw	r2,0(r5)
  801658:	29000015 	stw	r4,0(r5)
  80165c:	11000115 	stw	r4,4(r2)
  801660:	3005883a 	mov	r2,r6
  801664:	dfc00017 	ldw	ra,0(sp)
  801668:	dec00104 	addi	sp,sp,4
  80166c:	f800283a 	ret
  801670:	00802034 	movhi	r2,128
  801674:	1086cb04 	addi	r2,r2,6956
  801678:	10800017 	ldw	r2,0(r2)
  80167c:	00c02034 	movhi	r3,128
  801680:	18c75104 	addi	r3,r3,7492
  801684:	10000226 	beq	r2,zero,801690 <alt_dev_llist_insert+0x60>
  801688:	103ee83a 	callr	r2
  80168c:	1007883a 	mov	r3,r2
  801690:	01bffa84 	movi	r6,-22
  801694:	00800584 	movi	r2,22
  801698:	18800015 	stw	r2,0(r3)
  80169c:	3005883a 	mov	r2,r6
  8016a0:	dfc00017 	ldw	ra,0(sp)
  8016a4:	dec00104 	addi	sp,sp,4
  8016a8:	f800283a 	ret

008016ac <alt_icache_flush_all>:
  8016ac:	0009883a 	mov	r4,zero
  8016b0:	01420004 	movi	r5,2048
  8016b4:	08017dc1 	jmpi	8017dc <alt_icache_flush>

008016b8 <alt_alarm_stop>:
  8016b8:	000d303a 	rdctl	r6,status
  8016bc:	00bfff84 	movi	r2,-2
  8016c0:	3084703a 	and	r2,r6,r2
  8016c4:	1001703a 	wrctl	status,r2
  8016c8:	21400017 	ldw	r5,0(r4)
  8016cc:	20800117 	ldw	r2,4(r4)
  8016d0:	28800115 	stw	r2,4(r5)
  8016d4:	20c00117 	ldw	r3,4(r4)
  8016d8:	21000115 	stw	r4,4(r4)
  8016dc:	19400015 	stw	r5,0(r3)
  8016e0:	21000015 	stw	r4,0(r4)
  8016e4:	3001703a 	wrctl	status,r6
  8016e8:	f800283a 	ret

008016ec <alt_tick>:
  8016ec:	defffc04 	addi	sp,sp,-16
  8016f0:	d0a08b17 	ldw	r2,-32212(gp)
  8016f4:	dc000015 	stw	r16,0(sp)
  8016f8:	d4200717 	ldw	r16,-32740(gp)
  8016fc:	dc800215 	stw	r18,8(sp)
  801700:	10800044 	addi	r2,r2,1
  801704:	d4a00704 	addi	r18,gp,-32740
  801708:	dfc00315 	stw	ra,12(sp)
  80170c:	dc400115 	stw	r17,4(sp)
  801710:	d0a08b15 	stw	r2,-32212(gp)
  801714:	84800d26 	beq	r16,r18,80174c <alt_tick+0x60>
  801718:	80800403 	ldbu	r2,16(r16)
  80171c:	84400017 	ldw	r17,0(r16)
  801720:	10000326 	beq	r2,zero,801730 <alt_tick+0x44>
  801724:	d0a08b17 	ldw	r2,-32212(gp)
  801728:	1000011e 	bne	r2,zero,801730 <alt_tick+0x44>
  80172c:	80000405 	stb	zero,16(r16)
  801730:	d0e08b17 	ldw	r3,-32212(gp)
  801734:	80800217 	ldw	r2,8(r16)
  801738:	18800236 	bltu	r3,r2,801744 <alt_tick+0x58>
  80173c:	80800403 	ldbu	r2,16(r16)
  801740:	10000826 	beq	r2,zero,801764 <alt_tick+0x78>
  801744:	8821883a 	mov	r16,r17
  801748:	84bff31e 	bne	r16,r18,801718 <alt_tick+0x2c>
  80174c:	dfc00317 	ldw	ra,12(sp)
  801750:	dc800217 	ldw	r18,8(sp)
  801754:	dc400117 	ldw	r17,4(sp)
  801758:	dc000017 	ldw	r16,0(sp)
  80175c:	dec00404 	addi	sp,sp,16
  801760:	f800283a 	ret
  801764:	81000517 	ldw	r4,20(r16)
  801768:	80c00317 	ldw	r3,12(r16)
  80176c:	183ee83a 	callr	r3
  801770:	1009883a 	mov	r4,r2
  801774:	10000926 	beq	r2,zero,80179c <alt_tick+0xb0>
  801778:	80800217 	ldw	r2,8(r16)
  80177c:	d0e08b17 	ldw	r3,-32212(gp)
  801780:	2085883a 	add	r2,r4,r2
  801784:	80800215 	stw	r2,8(r16)
  801788:	10ffee2e 	bgeu	r2,r3,801744 <alt_tick+0x58>
  80178c:	00800044 	movi	r2,1
  801790:	80800405 	stb	r2,16(r16)
  801794:	8821883a 	mov	r16,r17
  801798:	003feb06 	br	801748 <alt_tick+0x5c>
  80179c:	000b303a 	rdctl	r5,status
  8017a0:	00bfff84 	movi	r2,-2
  8017a4:	2884703a 	and	r2,r5,r2
  8017a8:	1001703a 	wrctl	status,r2
  8017ac:	81000017 	ldw	r4,0(r16)
  8017b0:	80800117 	ldw	r2,4(r16)
  8017b4:	20800115 	stw	r2,4(r4)
  8017b8:	80c00117 	ldw	r3,4(r16)
  8017bc:	84000115 	stw	r16,4(r16)
  8017c0:	19000015 	stw	r4,0(r3)
  8017c4:	84000015 	stw	r16,0(r16)
  8017c8:	2801703a 	wrctl	status,r5
  8017cc:	8821883a 	mov	r16,r17
  8017d0:	003fdd06 	br	801748 <alt_tick+0x5c>

008017d4 <altera_nios2_qsys_irq_init>:
  8017d4:	000170fa 	wrctl	ienable,zero
  8017d8:	f800283a 	ret

008017dc <alt_icache_flush>:
  8017dc:	00820004 	movi	r2,2048
  8017e0:	2007883a 	mov	r3,r4
  8017e4:	1140012e 	bgeu	r2,r5,8017ec <alt_icache_flush+0x10>
  8017e8:	100b883a 	mov	r5,r2
  8017ec:	194b883a 	add	r5,r3,r5
  8017f0:	1940032e 	bgeu	r3,r5,801800 <alt_icache_flush+0x24>
  8017f4:	1800603a 	flushi	r3
  8017f8:	18c00804 	addi	r3,r3,32
  8017fc:	197ffd36 	bltu	r3,r5,8017f4 <alt_icache_flush+0x18>
  801800:	208007cc 	andi	r2,r4,31
  801804:	10000126 	beq	r2,zero,80180c <alt_icache_flush+0x30>
  801808:	1800603a 	flushi	r3
  80180c:	0000203a 	flushp
  801810:	f800283a 	ret
